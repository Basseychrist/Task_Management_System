<div class="form-card">
    <h1>Add New Task</h1>
    <% if (errors && errors.length > 0) { %>
        <div class="alert alert-danger">
            <ul>
                <% errors.forEach(error => { %>
                    <li><%= error.msg %></li>
                <% }) %>
            </ul>
        </div>
    <% } %>
    <form action="/tasks" method="POST">
        <div class="form-group">
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" value="<%= task.title || '' %>" required maxlength="100">
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <textarea id="description" name="description" required><%= task.description || '' %></textarea>
        </div>
        <div class="form-group">
            <label for="status">Status:</label>
            <select id="status" name="status">
                <option value="pending" <%= task && task.status === 'pending' ? 'selected' : '' %>>Pending</option>
                <option value="in-progress" <%= task && task.status === 'in-progress' ? 'selected' : '' %>>In-Progress</option>
                <option value="completed" <%= task && task.status === 'completed' ? 'selected' : '' %>>Completed</option>
                <option value="cancelled" <%= task && task.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
            </select>
        </div>
        <div class="form-group">
            <label for="priority">Priority:</label>
            <select id="priority" name="priority" required>
                <option value="low" <%= task.priority === 'low' ? 'selected' : '' %>>Low</option>
                <option value="medium" <%= task.priority === 'medium' ? 'selected' : '' %>>Medium</option>
                <option value="high" <%= task.priority === 'high' ? 'selected' : '' %>>High</option>
            </select>
        </div>
        <div class="form-group">
            <label for="dueDate">Due Date:</label>
            <input type="date" id="dueDate" name="dueDate" value="<%= task && task.dueDate ? new Date(task.dueDate).toISOString().split('T')[0] : '' %>">
        </div>
        <div class="form-group">
            <label for="assignedTo">Assigned To (Optional):</label>
            <select id="assignedTo" name="assignedTo">
                <option value="">None</option>
                <% users.forEach(user => { %>
                    <option value="<%= user._id %>" <%= task && task.assignedTo && task.assignedTo.toString() === user._id.toString() ? 'selected' : '' %>><%= user.displayName %></option>
                <% }) %>
            </select>
        </div>
        <div class="form-group">
            <label for="tags">Tags (comma-separated):</label>
            <input type="text" id="tags" name="tags" value="<%= Array.isArray(task.tags) ? task.tags.join(', ') : (task.tags || '') %>">
        </div>
        <div class="form-group">
            <label for="attachments">Attachments (JSON array of {filename, url, size}):</label>
            <textarea id="attachments" name="attachments" rows="3" placeholder='[{"filename": "doc1.pdf", "url": "http://example.com/doc1.pdf", "size": 12345}]'><%= task && task.attachments ? JSON.stringify(task.attachments) : '' %></textarea>
            <small>Each attachment must have a <b>filename</b>, <b>url</b>, and <b>size</b>.</small>
        </div>
        <button type="submit" class="btn btn-primary">Create Task</button>
        <a href="/tasks" class="btn btn-secondary">Cancel</a>
    </form>
</div>
<script>
document.querySelector("form").addEventListener("submit", function(e) {
  const title = document.getElementById("title").value.trim();
  const description = document.getElementById("description").value.trim();
  const dueDate = document.getElementById("dueDate").value;
  const attachments = document.getElementById("attachments").value.trim();
  let errors = [];

  if (!title) errors.push("Title is required.");
  if (title.length > 100) errors.push("Title must be at most 100 characters.");
  if (!description) errors.push("Description is required.");
  if (dueDate && isNaN(Date.parse(dueDate))) errors.push("Due date must be a valid date.");
  if (attachments) {
    try {
      const arr = JSON.parse(attachments);
      if (!Array.isArray(arr)) throw new Error();
    } catch {
      errors.push("Attachments must be a valid JSON array.");
    }
  }

  if (errors.length > 0) {
    alert(errors.join("\n"));
    e.preventDefault();
  }
});
</script>
